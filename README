auth api

app have 3 options:
1) auth (find or create)
2) check auth (by session id)
3) logout

1) for auth, you need redirect user to '/' rout with one parammeter - redirect (where you want to redirect user after success auth).
user will be redirected to this path, with one parameter in query - sid (session id). 
after getting this session id, you need to check it (stage 2).
2) for check auth, u need make http request to '/auth/check/' rout, with 2 parameters - token (just for security, same for all requests), and session id.
in response u will get error (if id wrong), or user data (user_id, and fullname / email if exist)
3) for logout, just redirect user to '/logout' page

(!) don't forget use encodeURIComponent to sid, because it contains some not valid symbols for http requests.
use it for save cookie, and make http requests

so, steps looks like this:
    1) check cookies

    2.1) if cookies.sid not exist, redirect to 'auth.babycarrot.com?redirect=yourapp.babycarrot.com/auth'
    2.2) after this, get query.sid at '/auth' rout, and make http request to '/auth/check' (/auth/check?token=babycarrot&sid=xxx)
    2.3) get response, and if res.err is not exist, put sid to cookies. else redirect to auth again

    3.1) if cookies exist, make http request to '/auth/check' (steps 2.2, 2.3)

node.js example:

auth.check = (query_sid, cookie_sid, cb)->
    sid = query_sid or cookie_sid
    req = http.request {path: '/auth/check?token='+glob.config.app.token+'&sid='+encodeURIComponent(sid), host: glob.config.app.auth.host, port: glob.config.app.auth.port, method: 'GET'}, (res)->
        data = ''
        res.on 'data', (chunk)->
            data += chunk.toString()
        res.on 'end', ->
            data = JSON.parse data
            if data.err
                cb data.err
            else
                sid = decodeURIComponent(sid)
                session =
                    id: sid
                    user_id: data.user_id
                    email: data.email
                    name: data.fullname
                if cookie_sid
                    # extend session with local data
                    glob.redis.get sid, (err, _session)->
                        for key,val of _session
                            session[key] = val
                        cb null, session
                else if query_sid
                    # create local user, for extend user data. if needed.
                    glob.mongo.user.findById session.user_id, (err,user)->
                        unless user
                            user = new glob.mongo.user
                                _id: session.user_id
                            user.hello = 'world'
                            user.save()
                        session.hello = user.hello
                        glob.redis.set sid,
                            hello: session.hello
                        cb null, session
        req.on 'error', (err)->
            cb err
        req.end()

auth.redirect: (res)->
    res.redirect config.auth_url + '?redirect='+config.app.url+'/auth'
